{"version":3,"sources":["List.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","goodsCollectionAndApprove","detailForms","textForms","data","sessionStorage","getItem","axios","url","domain","method","headers","then","response","alert","catch","error","console","log","getTableRowData","get","res","params","map","vl","operationResult","operationRecords","status","ret","formComponentValues","it","name","purpose","value","more","JSON","parse","item","rowValue","detail","push","setState","items","isLoaded","stringify","onFinish","values","add","element","count","columns","title","dataIndex","key","render","text","state","auditList","style","padding","this","labelCol","span","wrapperCol","initialValues","remember","onFinishFailed","Item","label","rules","required","message","placeholder","initialValue","fields","remove","fieldKey","display","marginBottom","align","MinusCircleOutlined","onClick","type","block","icon","PlusOutlined","offset","htmlType","dataSource","React","Component","dd","corpId","fetch","json","result","permission","requestAuthCode","onSuccess","code","setItem","userid","deptIdList","onFail","err","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79284fc3.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {domain} from \"./App\";\nimport {Form, Input, Button, Space, Table} from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\n// const buttonStyle = {height:'60px',margin: '10px', padding: '10px', fontsize:'18px'};\n\n// class TrData extends React.Component {\n//     constructor(props) {\n//         super(props);\n\n//     }\n\n//     render() {\n//         return (\n//             this.props.items.map((item) => {\n//                 const name = item.formComponentValues[0].name;\n//                 const result = item.result;\n//                 const approveUserid = item.approverUserids[0];\n//                 return (\n//                     <tr className=\"text-center\">\n//                         <td>{name}</td>\n//                         <td>{result}</td>\n//                         <td>{approveUserid}</td>\n//                     </tr>\n//                 )\n//             })\n//         )\n//     }\n// }\n\nclass List extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            isLoaded: false,\n            auditList:false,\n        };\n    };\n\n    goodsCollectionAndApprove = (detailForms,textForms) => {\n        // 获取存储的用户部门和ID\n        const userId = sessionStorage.getItem('userId');\n        const deptId = sessionStorage.getItem('deptId');\n        // demo直接构建了要请求的数据，实际开发需要从页面获取\n        const data = {\n            \"detailForms\": detailForms,\n            \"originatorUserId\": userId,\n            \"textForms\": textForms,\n            \"deptId\": deptId\n        };\n        // 创建审批流程\n        axios({\n            url: domain + '/process/instance',\n            method: 'post',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                alert(\"success\");\n                // 根据instanceId获取实例详情\n                // axios.get(domain + '/process/instance/' + response.data.data)\n                //     .then(response => {\n                //         alert(JSON.stringify(response.data))\n                //         // console.log(response)\n                //     })\n                //     .catch(error => {\n                //         alert(JSON.stringify(error))\n                //         // console.log(error.message)\n                //     })\n                // console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    // response = {\n    //     \"success\": true,\n    //     \"errorCode\": null,\n    //     \"errorMsg\": null,\n    //     \"data\": [\n    //         {\n    //             \"approverUserids\": [\n    //                 \"043217290519980938\"\n    //             ],\n    //             \"attachedProcessInstanceIds\": [],\n    //             \"bizAction\": \"NONE\",\n    //             \"businessId\": \"202107261018000327301\",\n    //             \"ccUserids\": [\n    //                 \"043217290519980938\"\n    //             ],\n    //             \"createTime\": \"2021-07-26T02:18:33.000+00:00\",\n    //             \"finishTime\": null,\n    //             \"formComponentValues\": [\n    //                 {\n    //                     \"componentType\": \"TextField\",\n    //                     \"extValue\": null,\n    //                     \"id\": \"物品用途\",\n    //                     \"name\": \"物品用途\",\n    //                     \"value\": \"测试物品领用\"\n    //                 },\n    //                 {\n    //                     \"componentType\": \"TableField\",\n    //                     \"extValue\": \"{\\\"statValue\\\":[],\\\"componentName\\\":\\\"TableField\\\"}\",\n    //                     \"id\": \"TableField-MINGXI\",\n    //                     \"name\": \"物品明细\",\n    //                     \"value\": \"[{\\\"rowValue\\\":[{\\\"componentType\\\":\\\"TextField\\\",\\\"label\\\":\\\"物品名称\\\",\\\"value\\\":\\\"测试物品领用-电脑\\\",\\\"key\\\":\\\"物品名称\\\"},{\\\"componentType\\\":\\\"NumberField\\\",\\\"label\\\":\\\"数量\\\",\\\"value\\\":\\\"3\\\",\\\"key\\\":\\\"数量\\\"},{\\\"componentType\\\":\\\"DDPhotoField\\\",\\\"label\\\":\\\"图片\\\",\\\"value\\\":\\\"[\\\\\\\"https://img.alicdn.com/imgextra/i4/O1CN01Y2sejp27k1TCmDENg_!!6000000007834-2-tps-1924-918.png\\\\\\\",\\\\\\\"https://img.alicdn.com/imgextra/i4/O1CN015zvwqo1WDNSZzfk4O_!!6000000002754-2-tps-2878-1520.png\\\\\\\"]\\\",\\\"key\\\":\\\"DDPhotoField_1D4MDW1RQTZ40\\\"}]},{\\\"rowValue\\\":[{\\\"componentType\\\":\\\"TextField\\\",\\\"label\\\":\\\"物品名称\\\",\\\"value\\\":\\\"测试物品领用-电脑1\\\",\\\"key\\\":\\\"物品名称\\\"},{\\\"componentType\\\":\\\"NumberField\\\",\\\"label\\\":\\\"数量\\\",\\\"value\\\":\\\"2\\\",\\\"key\\\":\\\"数量\\\"}]}]\"\n    //                 },\n    //                 {\n    //                     \"componentType\": \"TextareaField\",\n    //                     \"extValue\": null,\n    //                     \"id\": \"领用详情\",\n    //                     \"name\": \"领用详情\",\n    //                     \"value\": \"领用详情1\"\n    //                 },\n    //                 {\n    //                     \"componentType\": \"DDPhotoField\",\n    //                     \"extValue\": null,\n    //                     \"id\": \"图片\",\n    //                     \"name\": \"图片\",\n    //                     \"value\": \"null\"\n    //                 }\n    //             ],\n    //             \"mainProcessInstanceId\": null,\n    //             \"operationRecords\": [\n    //                 {\n    //                     \"attachments\": null,\n    //                     \"date\": \"2021-07-26T02:18:32.000+00:00\",\n    //                     \"operationResult\": \"NONE\",\n    //                     \"operationType\": \"START_PROCESS_INSTANCE\",\n    //                     \"remark\": null,\n    //                     \"userid\": \"043217290519980938\"\n    //                 }\n    //             ],\n    //             \"originatorDeptId\": \"-1\",\n    //             \"originatorDeptName\": \"浩倡测试企业申请认证\",\n    //             \"originatorUserid\": \"043217290519980938\",\n    //             \"result\": \"\",\n    //             \"status\": \"RUNNING\",\n    //             \"tasks\": [\n    //                 {\n    //                     \"activityId\": \"b5ebc027-2f09-47b8-9b20-34c7ac4f02a3\",\n    //                     \"createTime\": \"2021-07-26T02:18:33.000+00:00\",\n    //                     \"finishTime\": null,\n    //                     \"taskResult\": \"NONE\",\n    //                     \"taskStatus\": \"RUNNING\",\n    //                     \"taskid\": \"69699095515\",\n    //                     \"url\": \"?procInsId=57b2e166-2897-40f5-b71b-698d7cc5ef40&taskId=69699095515&businessId=202107261018000327301\",\n    //                     \"userid\": \"043217290519980938\"\n    //                 }\n    //             ],\n    //             \"title\": \"万志强提交的测试物品领用\"\n    //         }\n    //     ]\n    // }\n\n    getTableRowData = () => {\n        // 获取审批列表\n        axios.get(domain + '/process/instance')\n            .then(response => {\n                // alert(JSON.stringify(response.data.data))\n                let res = {};\n                let params = [];\n                response.data.data.map((vl)=>{\n                    res = {operationResult:vl.operationRecords[0].operationResult,status:vl.status};\n                    let ret = {};\n                    vl.formComponentValues.map(it=>{\n                        if(it.name==='物品用途'){\n                            ret.purpose = it.value;\n                        }else if(it.name === '物品明细'){\n                            ret.more = JSON.parse(it.value).map(item=>{\n                                return `${item.rowValue[0].value}--${item.rowValue[1].value}`\n                            });\n                        }else if(it.name === '领用详情'){\n                            ret.detail = it.value;\n                        }\n                    })\n                    params.push(ret)\n                    res.formComponentValues = params\n                })\n                this.setState(\n                    {items: res, isLoaded: true}\n                )\n            })\n            .catch(error => {\n                alert(JSON.stringify(error))\n            })\n                // console.log(error.message)\n    };\n\n    onFinish = (values) => {\n        console.log(values.add);\n        const detailForms = [];\n        values.add.map(element => {\n            detailForms.push({\n                \"textForms\": [{\"name\": \"物品名称\", \"value\": element.name}, {\n                    \"name\": \"数量\",\n                    \"value\": element.count\n                }], \"name\": \"物品明细\"\n            });\n        });\n\n        const textForms = [{\"name\": \"物品用途\",\"value\":values.purpose},{\"name\":\"领用详情\",\"value\":values.detail}]\n\n        this.goodsCollectionAndApprove(detailForms,textForms)\n        console.log('Success:', values);\n      };\n\n    render() {\n        return <div style={{padding:'20px'}}>\n            {!this.state.auditList&&<Form\n            name=\"basic\"\n            labelCol={{ span: 8 }}\n            wrapperCol={{ span: 16 }}\n            initialValues={{ remember: true }}\n            onFinish={this.onFinish}\n            onFinishFailed={this.onFinishFailed}\n            >\n                <Form.Item\n                    label=\"物品用途\"\n                    name=\"purpose\"\n                    rules={[{ required: true, message: '请输入物品用途!' }]}\n                >\n                    <Input placeholder=\"如：日常办公\"/>\n                </Form.Item>\n\n                <Form.List name=\"add\" initialValue={[{}]}>\n                    {(fields, { add , remove }) => (\n                    <>\n                        {fields.map(({ key, name, fieldKey, ...restField }) => (\n                        <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n\n                            <Form.Item\n                                label=\"物品名称\"\n                                name={[name, 'name']}\n                                // fieldKey={[fieldKey, 'first']}\n                                rules={[{ required: true, message: '请输入物品名称!' }]}\n                            >\n                                <Input placeholder=\"请输入物品名称\"/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"数量\"\n                                name={[name, 'count']}\n                                // fieldKey={[fieldKey, 'last']}\n                                rules={[{ required: true, message: '请输入数量!' }]}\n                            >\n                                <Input placeholder=\"请输入数量\"/>\n                            </Form.Item>\n\n                            <MinusCircleOutlined onClick={() => remove(name)} />\n                        </Space>\n                        ))}\n                        <Form.Item>\n                        <Button type=\"dashed\" onClick={() => add(1)} block icon={<PlusOutlined />}>\n                            增加物品明细\n                        </Button>\n                        </Form.Item>\n                    </>\n                    )}\n                </Form.List>\n\n                <Form.Item\n                    label=\"领用详情\"\n                    name=\"detail\"\n                    rules={[{ required: true, message: '请输入物品零用详情说明!' }]}\n                >\n                    <Input placeholder=\"请输入物品零用详情说明\"/>\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                    领用并提交审批\n                    </Button>\n                </Form.Item>\n            </Form>}\n            <a onClick={()=>{\n                this.setState({auditList:!this.state.auditList})\n                this.getTableRowData()\n                }} >\n                {this.state.auditList?'提交申领审批':'查看审批记录'}\n            </a>\n            {\n                this.state.auditList && <Table columns={this.columns} dataSource={this.state.items.formComponentValues} />\n            }\n        </div>\n        // if (!this.state.isLoaded) {\n        //     return (<div>\n        //         <button style={buttonStyle} onClick={this.goodsCollectionAndApprove}>领用并提交审批</button>\n        //         <button style={buttonStyle} onClick={this.getTableRowData}>获取提交的审批信息</button>\n        //     </div>)\n        // } else {\n        //     return (<div>\n        //         <button style={buttonStyle} onClick={this.goodsCollectionAndApprove}>领用并提交审批</button>\n        //         <button style={buttonStyle} onClick={this.getTableRowData}>获取提交的审批信息</button>\n        //         <table className=\"table table-bordered\">\n        //             <thead>\n        //             <tr>\n        //                 <th>物品用途</th>\n        //                 <th>审批状态</th>\n        //                 <th>审批人</th>\n        //             </tr>\n        //             </thead>\n        //             <tbody>\n\n        //             <TrData items={this.state.items}/>\n\n        //             </tbody>\n        //         </table>\n        //     </div>)\n        // }\n    }\n\n    columns = [\n        {\n          title: '物品用途',\n          dataIndex: 'purpose',\n          key: 'purpose',\n        },\n        {\n          title: '物品明细',\n          dataIndex: 'more',\n          key: 'more',\n          render:value=>{\n            console.log(value,'=====')\n            return value.map(text=>{\n                return <p>{text}</p>\n            })\n          }\n        },\n        {\n          title: '领用详情',\n          dataIndex: 'detail',\n          key: 'detail',\n        }]\n}\n\nexport default List;\n","import './App.css';\nimport axios from 'axios';\nimport * as dd from 'dingtalk-jsapi';\nimport List from './List'\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\nexport const domain = \"\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={goodsCollectionAndApprove}>领用并提交审批</button>*/}\n            {/*</header>*/}\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={}>获取提交的审批信息</button>*/}\n            {/*</header>*/}\n            <div className=\"container\">\n                <List />\n            </div>\n        </div>\n    );\n};\n\n\ndd.ready(function () {\n    // let corpId;\n    // axios.get(domain + \"/config\")\n    //     .then(response => {\n    //         corpId = response.data.corpId;\n    //     })\n    //     .catch(error => {\n    //         alert(JSON.stringify(error))\n    //         // console.log(error.message)\n    //     })\n    let corpId;\n    fetch(domain + '/config')\n        .then(res => res.json())\n        .then((result) => {\n            // alert(JSON.stringify(result));\n            corpId = result.data.corpId;\n            // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n            dd.runtime.permission.requestAuthCode({\n\n                corpId: corpId, //三方企业ID\n                onSuccess: function (result) {\n                    // alert(JSON.stringify(result));\n                    axios.get(domain + \"/login?authCode=\" + result.code)\n                        .then(response => {\n                            // alert(JSON.stringify(response));\n                            // alert(JSON.stringify(response.data));\n                            // alert(JSON.stringify(response.data.data.userid));\n                            // alert(JSON.stringify(response.data.data.deptIdList[0]));\n                            // 登录成功后储存用户部门和ID\n                            sessionStorage.setItem(\"userId\", response.data.data.userid);\n                            sessionStorage.setItem(\"deptId\", response.data.data.deptIdList[0]);\n                        })\n                        .catch(error => {\n                            alert(JSON.stringify(error))\n                            // console.log(error.message)\n                        })\n\n                },\n                onFail: function (err) {\n                    alert(JSON.stringify(err))\n                }\n            });\n        });\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}