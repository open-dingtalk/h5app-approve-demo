{"version":3,"sources":["List.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","goodsCollectionAndApprove","detailForms","textForms","data","sessionStorage","getItem","axios","url","domain","method","headers","then","response","success","alert","errorMsg","catch","error","console","log","getTableRowData","get","res","params","map","vl","ret","operationResult","operationRecords","status","formComponentValues","it","name","purpose","value","more","JSON","parse","item","rowValue","detail","push","setState","items","isLoaded","stringify","onFinish","values","add","element","count","columns","title","dataIndex","key","render","text","state","auditList","style","padding","this","labelCol","span","wrapperCol","initialValues","remember","onFinishFailed","Item","label","rules","required","message","placeholder","initialValue","fields","remove","fieldKey","display","marginBottom","align","MinusCircleOutlined","onClick","type","block","icon","PlusOutlined","offset","htmlType","dataSource","React","Component","dd","corpId","fetch","json","result","permission","requestAuthCode","onSuccess","code","setItem","userid","deptIdList","onFail","err","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ce9c26a.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {domain} from \"./App\";\nimport {Form, Input, Button, Space, Table} from \"antd\";\nimport {MinusCircleOutlined, PlusOutlined} from '@ant-design/icons';\n\nclass List extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            isLoaded: false,\n            auditList: false,\n        };\n    };\n\n    goodsCollectionAndApprove = (detailForms, textForms) => {\n        // 获取存储的用户部门和ID\n        const userId = sessionStorage.getItem('userId');\n        const deptId = sessionStorage.getItem('deptId');\n        // demo直接构建了要请求的数据，实际开发需要从页面获取\n        const data = {\n            \"detailForms\": detailForms,\n            \"originatorUserId\": userId,\n            \"textForms\": textForms,\n            \"deptId\": deptId\n        };\n        // 创建审批流程\n        axios({\n            url: domain + '/process/instance',\n            method: 'post',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                if (response.data.success) {\n                    alert(\"审批提交成功\")\n                } else {\n                    alert(response.data.errorMsg)\n                }\n                // 根据instanceId获取实例详情\n                // axios.get(domain + '/process/instance/' + response.data.data)\n                //     .then(response => {\n                //         alert(JSON.stringify(response.data))\n                //         // console.log(response)\n                //     })\n                //     .catch(error => {\n                //         alert(JSON.stringify(error))\n                //         // console.log(error.message)\n                //     })\n                // console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    getTableRowData = () => {\n        // 获取审批列表\n        axios.get(domain + '/process/instance')\n            .then(response => {\n                let res = {};\n                let params = [];\n                response.data.data.map((vl)=>{\n                    res = {};\n                    let ret = {operationResult:vl.operationRecords[0].operationResult,status:vl.status};\n                    vl.formComponentValues.map(it=>{\n                        if(it.name==='物品用途'){\n                            ret.purpose = it.value;\n                        } else if (it.name === '物品明细') {\n                            ret.more = JSON.parse(it.value).map(item => {\n                                return `${item.rowValue[0].value}--${item.rowValue[1].value}`\n                            });\n                        } else if (it.name === '领用详情') {\n                            ret.detail = it.value;\n                        }\n                    })\n                    params.push(ret)\n                    res.formComponentValues = params\n                })\n                this.setState(\n                    {items: res, isLoaded: true}\n                )\n            })\n            .catch(error => {\n                alert(JSON.stringify(error))\n            })\n    };\n\n    onFinish = (values) => {\n        console.log(values.add);\n        const detailForms = [];\n        values.add.map(element => {\n            detailForms.push({\n                \"textForms\": [{\"name\": \"物品名称\", \"value\": element.name}, {\n                    \"name\": \"数量\",\n                    \"value\": element.count\n                }], \"name\": \"物品明细\"\n            });\n        });\n\n        const textForms = [{\"name\": \"物品用途\", \"value\": values.purpose}, {\"name\": \"领用详情\", \"value\": values.detail}]\n\n        this.goodsCollectionAndApprove(detailForms, textForms)\n    };\n\n    render() {\n        return <div style={{padding: '20px'}}>\n            {!this.state.auditList && <Form\n                name=\"basic\"\n                labelCol={{span: 8}}\n                wrapperCol={{span: 16}}\n                initialValues={{remember: true}}\n                onFinish={this.onFinish}\n                onFinishFailed={this.onFinishFailed}\n            >\n                <Form.Item\n                    label=\"物品用途\"\n                    name=\"purpose\"\n                    rules={[{required: true, message: '请输入物品用途!'}]}\n                >\n                    <Input placeholder=\"如：日常办公\"/>\n                </Form.Item>\n\n                <Form.List name=\"add\" initialValue={[{}]}>\n                    {(fields, {add, remove}) => (\n                        <>\n                            {fields.map(({key, name, fieldKey, ...restField}) => (\n                                <Space key={key} style={{display: 'flex', marginBottom: 8}} align=\"baseline\">\n\n                                    <Form.Item\n                                        label=\"物品名称\"\n                                        name={[name, 'name']}\n                                        // fieldKey={[fieldKey, 'first']}\n                                        rules={[{required: true, message: '请输入物品名称!'}]}\n                                    >\n                                        <Input placeholder=\"请输入物品名称\"/>\n                                    </Form.Item>\n\n                                    <Form.Item\n                                        label=\"数量\"\n                                        name={[name, 'count']}\n                                        // fieldKey={[fieldKey, 'last']}\n                                        rules={[{required: true, message: '请输入数量!'}]}\n                                    >\n                                        <Input placeholder=\"请输入数量\"/>\n                                    </Form.Item>\n\n                                    <MinusCircleOutlined onClick={() => remove(name)}/>\n                                </Space>\n                            ))}\n                            <Form.Item>\n                                <Button type=\"dashed\" onClick={() => add(1)} block icon={<PlusOutlined/>}>\n                                    增加物品明细\n                                </Button>\n                            </Form.Item>\n                        </>\n                    )}\n                </Form.List>\n\n                <Form.Item\n                    label=\"领用详情\"\n                    name=\"detail\"\n                    rules={[{required: true, message: '请输入物品零用详情说明!'}]}\n                >\n                    <Input placeholder=\"请输入物品零用详情说明\"/>\n                </Form.Item>\n\n                <Form.Item wrapperCol={{offset: 8, span: 16}}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        领用并提交审批\n                    </Button>\n                </Form.Item>\n            </Form>}\n            <a onClick={() => {\n                this.setState({auditList: !this.state.auditList})\n                this.getTableRowData()\n            }}>\n                {this.state.auditList ? '提交申领审批' : '查看审批记录'}\n            </a>\n            {\n                this.state.auditList && <Table columns={this.columns} dataSource={this.state.items.formComponentValues}/>\n            }\n        </div>\n    }\n\n    columns = [\n        {\n            title: '物品用途',\n            dataIndex: 'purpose',\n            key: 'purpose',\n        },\n        {\n            title: '物品明细',\n            dataIndex: 'more',\n            key: 'more',\n            render: value => {\n                return value.map(text => {\n                    return <p>{text}</p>\n                })\n            }\n        },\n        {\n            title: '领用详情',\n            dataIndex: 'detail',\n            key: 'detail',\n        }, {\n            title: '流程状态',\n            dataIndex: 'status',\n            key: 'status',\n            render: (status='RUNNING') => {\n                switch (status) {\n                    case 'NEW':\n                        return <>新建</>;\n                    case 'RUNNING':\n                        return <>审批中</>;\n                    case 'COMPLETED':\n                        return <>完成</>\n                    case 'CANCELED':\n                        return <>取消</>;\n                    break;\n                }\n\n            }\n        }]\n}\n\nexport default List;\n","import './App.css';\nimport axios from 'axios';\nimport * as dd from 'dingtalk-jsapi';\nimport List from './List'\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\nexport const domain = \"\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={goodsCollectionAndApprove}>领用并提交审批</button>*/}\n            {/*</header>*/}\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={}>获取提交的审批信息</button>*/}\n            {/*</header>*/}\n            <div className=\"container\">\n                <List />\n            </div>\n        </div>\n    );\n};\n\n\ndd.ready(function () {\n    // let corpId;\n    // axios.get(domain + \"/config\")\n    //     .then(response => {\n    //         corpId = response.data.corpId;\n    //     })\n    //     .catch(error => {\n    //         alert(JSON.stringify(error))\n    //         // console.log(error.message)\n    //     })\n    let corpId;\n    fetch(domain + '/config')\n        .then(res => res.json())\n        .then((result) => {\n            // alert(JSON.stringify(result));\n            corpId = result.data.corpId;\n            // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n            dd.runtime.permission.requestAuthCode({\n\n                corpId: corpId, //三方企业ID\n                onSuccess: function (result) {\n                    // alert(JSON.stringify(result));\n                    axios.get(domain + \"/login?authCode=\" + result.code)\n                        .then(response => {\n                            // alert(JSON.stringify(response));\n                            // alert(JSON.stringify(response.data));\n                            // alert(JSON.stringify(response.data.data.userid));\n                            // alert(JSON.stringify(response.data.data.deptIdList[0]));\n                            // 登录成功后储存用户部门和ID\n                            sessionStorage.setItem(\"userId\", response.data.data.userid);\n                            sessionStorage.setItem(\"deptId\", response.data.data.deptIdList[0]);\n                        })\n                        .catch(error => {\n                            alert(JSON.stringify(error))\n                            // console.log(error.message)\n                        })\n\n                },\n                onFail: function (err) {\n                    alert(JSON.stringify(err))\n                }\n            });\n        });\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}