{"version":3,"sources":["List.js","App.js","reportWebVitals.js","index.js"],"names":["List","React","Component","props","goodsCollectionAndApprove","detailForms","textForms","data","sessionStorage","getItem","axios","url","domain","method","headers","then","response","alert","catch","error","console","log","getTableRowData","get","params","map","vl","ret","operationResult","operationRecords","status","formComponentValues","it","res","name","purpose","value","more","detail","push","setState","JSON","stringify","onFinish","values","add","element","count","columns","title","dataIndex","key","render","state","items","isLoaded","auditList","style","padding","this","labelCol","span","wrapperCol","initialValues","remember","onFinishFailed","Item","label","rules","required","message","placeholder","initialValue","fields","remove","fieldKey","display","marginBottom","align","MinusCircleOutlined","onClick","type","block","icon","PlusOutlined","offset","htmlType","dataSource","dd","corpId","fetch","json","result","permission","requestAuthCode","onSuccess","code","setItem","userid","deptIdList","onFail","err","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7e6409f.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {domain} from \"./App\";\nimport {Form, Input, Button, Space, Table} from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst buttonStyle = {height:'60px',margin: '10px', padding: '10px', fontsize:'18px'};\n\nclass TrData extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            this.props.items.map((item) => {\n                const name = item.formComponentValues[0].name;\n                const result = item.result;\n                const approveUserid = item.approverUserids[0];\n                return (\n                    <tr className=\"text-center\">\n                        <td>{name}</td>\n                        <td>{result}</td>\n                        <td>{approveUserid}</td>\n                    </tr>\n                )\n            })\n        )\n    }\n}\n\nclass List extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            isLoaded: false,\n            auditList:false,\n        };\n    };\n\n    goodsCollectionAndApprove = (detailForms,textForms) => {\n        // 获取存储的用户部门和ID\n        const userId = sessionStorage.getItem('userId');\n        const deptId = sessionStorage.getItem('deptId');\n        // demo直接构建了要请求的数据，实际开发需要从页面获取\n        const data = {\n            \"detailForms\": detailForms,\n            \"originatorUserId\": userId,\n            \"textForms\": textForms,\n            \"deptId\": deptId\n        };\n        // 创建审批流程\n        axios({\n            url: domain + '/process/instance',\n            method: 'post',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                alert(\"success\");\n                // 根据instanceId获取实例详情\n                // axios.get(domain + '/process/instance/' + response.data.data)\n                //     .then(response => {\n                //         alert(JSON.stringify(response.data))\n                //         // console.log(response)\n                //     })\n                //     .catch(error => {\n                //         alert(JSON.stringify(error))\n                //         // console.log(error.message)\n                //     })\n                // console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    getTableRowData = () => {\n        // 获取审批列表\n        axios.get(domain + '/process/instance')\n            .then(response => {\n                // alert(JSON.stringify(response.data.data))\n                console.log(response,'=====')\n                let params = [];\n                response.data.map((vl)=>{\n                    let ret = {operationResult:vl.operationRecords.operationResult,status:vl.status};\n                    vl.formComponentValues.map(it=>{\n                        let res = {};\n                        if(it.name==='物品用途'){\n                            res.purpose = it.value;\n                        }else if(it.name === '物品明细'){\n                            res.more = it.value;\n                        }else if(it.name === '领用详情'){\n                            res.detail = it.value;\n                        }\n                        params.push(res)\n                    })\n                    ret.formComponentValues = params\n                })\n                this.setState(\n                    // {items: ret, isLoaded: true}\n                )\n                // console.log(ret,'params',params,'11111======')\n            })\n            .catch(error => {\n                alert(JSON.stringify(error))\n                // console.log(error.message)\n            })\n    };\n\n    onFinish = (values) => {\n        console.log(values.add);\n        const detailForms = [];\n        values.add.map(element => {\n            detailForms.push({\n                \"textForms\": [{\"name\": \"物品名称\", \"value\": element.name}, {\n                    \"name\": \"数量\",\n                    \"value\": element.count\n                }], \"name\": \"物品明细\"\n            });\n        });\n\n        const textForms = [{\"name\": \"物品用途\",\"value\":values.purpose},{\"name\":\"领用详情\",\"value\":values.detail}]\n\n        this.goodsCollectionAndApprove(detailForms,textForms)\n        console.log('Success:', values);\n      };\n\n    render() {\n        return <div style={{padding:'20px'}}>\n            {!this.state.auditList&&<Form\n            name=\"basic\"\n            labelCol={{ span: 8 }}\n            wrapperCol={{ span: 16 }}\n            initialValues={{ remember: true }}\n            onFinish={this.onFinish}\n            onFinishFailed={this.onFinishFailed}\n            >\n                <Form.Item\n                    label=\"物品用途\"\n                    name=\"purpose\"\n                    rules={[{ required: true, message: '请输入物品用途!' }]}\n                >\n                    <Input placeholder=\"如：日常办公\"/>\n                </Form.Item>\n\n                <Form.List name=\"add\" initialValue={[{}]}>\n                    {(fields, { add , remove }) => (\n                    <>\n                        {fields.map(({ key, name, fieldKey, ...restField }) => (\n                        <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n\n                            <Form.Item\n                                label=\"物品名称\"\n                                name={[name, 'name']}\n                                // fieldKey={[fieldKey, 'first']}\n                                rules={[{ required: true, message: '请输入物品名称!' }]}\n                            >\n                                <Input placeholder=\"请输入物品名称\"/>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"数量\"\n                                name={[name, 'count']}\n                                // fieldKey={[fieldKey, 'last']}\n                                rules={[{ required: true, message: '请输入数量!' }]}\n                            >\n                                <Input placeholder=\"请输入数量\"/>\n                            </Form.Item>\n\n                            <MinusCircleOutlined onClick={() => remove(name)} />\n                        </Space>\n                        ))}\n                        <Form.Item>\n                        <Button type=\"dashed\" onClick={() => add(1)} block icon={<PlusOutlined />}>\n                            增加物品明细\n                        </Button>\n                        </Form.Item>\n                    </>\n                    )}\n                </Form.List>\n\n                <Form.Item\n                    label=\"领用详情\"\n                    name=\"detail\"\n                    rules={[{ required: true, message: '请输入物品零用详情说明!' }]}\n                >\n                    <Input placeholder=\"请输入物品零用详情说明\"/>\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                    领用并提交审批\n                    </Button>\n                </Form.Item>\n            </Form>}\n            <a onClick={()=>{\n                this.setState({auditList:true})\n                this.getTableRowData()\n                }} >\n                查看审批记录\n            </a>\n            {\n                this.state.auditList && <Table columns={this.columns} dataSource={this.state.items} />\n            }\n        </div>\n        // if (!this.state.isLoaded) {\n        //     return (<div>\n        //         <button style={buttonStyle} onClick={this.goodsCollectionAndApprove}>领用并提交审批</button>\n        //         <button style={buttonStyle} onClick={this.getTableRowData}>获取提交的审批信息</button>\n        //     </div>)\n        // } else {\n        //     return (<div>\n        //         <button style={buttonStyle} onClick={this.goodsCollectionAndApprove}>领用并提交审批</button>\n        //         <button style={buttonStyle} onClick={this.getTableRowData}>获取提交的审批信息</button>\n        //         <table className=\"table table-bordered\">\n        //             <thead>\n        //             <tr>\n        //                 <th>物品用途</th>\n        //                 <th>审批状态</th>\n        //                 <th>审批人</th>\n        //             </tr>\n        //             </thead>\n        //             <tbody>\n\n        //             <TrData items={this.state.items}/>\n\n        //             </tbody>\n        //         </table>\n        //     </div>)\n        // }\n    }\n\n    columns = [\n        {\n          title: '物品用途',\n          dataIndex: 'purpose',\n          key: 'purpose',\n        },\n        {\n          title: '物品明细',\n          dataIndex: 'more',\n          key: 'more',\n          render:value=>{\n            console.log(value,'=====')\n          }\n        },\n        {\n          title: '领用详情',\n          dataIndex: 'detail',\n          key: 'detail',\n        }]\n}\n\nexport default List;\n","import './App.css';\nimport axios from 'axios';\nimport * as dd from 'dingtalk-jsapi';\nimport List from './List'\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\nexport const domain = \"\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={goodsCollectionAndApprove}>领用并提交审批</button>*/}\n            {/*</header>*/}\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={}>获取提交的审批信息</button>*/}\n            {/*</header>*/}\n            <div className=\"container\">\n                <List />\n            </div>\n        </div>\n    );\n};\n\n\ndd.ready(function () {\n    // let corpId;\n    // axios.get(domain + \"/config\")\n    //     .then(response => {\n    //         corpId = response.data.corpId;\n    //     })\n    //     .catch(error => {\n    //         alert(JSON.stringify(error))\n    //         // console.log(error.message)\n    //     })\n    let corpId;\n    fetch(domain + '/config')\n        .then(res => res.json())\n        .then((result) => {\n            // alert(JSON.stringify(result));\n            corpId = result.data.corpId;\n            // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n            dd.runtime.permission.requestAuthCode({\n\n                corpId: corpId, //三方企业ID\n                onSuccess: function (result) {\n                    // alert(JSON.stringify(result));\n                    axios.get(domain + \"/login?authCode=\" + result.code)\n                        .then(response => {\n                            // alert(JSON.stringify(response));\n                            // alert(JSON.stringify(response.data));\n                            // alert(JSON.stringify(response.data.data.userid));\n                            // alert(JSON.stringify(response.data.data.deptIdList[0]));\n                            // 登录成功后储存用户部门和ID\n                            sessionStorage.setItem(\"userId\", response.data.data.userid);\n                            sessionStorage.setItem(\"deptId\", response.data.data.deptIdList[0]);\n                        })\n                        .catch(error => {\n                            alert(JSON.stringify(error))\n                            // console.log(error.message)\n                        })\n\n                },\n                onFail: function (err) {\n                    alert(JSON.stringify(err))\n                }\n            });\n        });\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}