{"version":3,"sources":["List.js","App.js","reportWebVitals.js","index.js"],"names":["TrData","props","this","items","map","item","name","formComponentValues","result","approveUserid","approverUserids","className","React","Component","List","isLoaded","render","domain","dd","permission","requestAuthCode","corpId","onSuccess","axios","get","code","then","response","sessionStorage","setItem","data","userid","deptIdList","catch","error","alert","JSON","stringify","onFail","err","App","onClick","getItem","url","method","headers","console","log","constructor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6NAEMA,E,kDACF,WAAYC,GAAQ,uCACVA,G,0CAIV,WACI,OACIC,KAAKD,MAAME,MAAMC,KAAI,SAACC,GAClB,IAAMC,EAAOD,EAAKE,oBAAoB,GAAGD,KACnCE,EAASH,EAAKG,OACdC,EAAgBJ,EAAKK,gBAAgB,GAC3C,OACI,qBAAIC,UAAU,cAAd,UACI,6BAAKL,IACL,6BAAKE,IACL,6BAAKC,c,GAhBRG,IAAMC,WA2DZC,E,kDA7BX,WAAYb,EAAOc,GAAW,IAAD,8BACzB,cAAMd,IAJVE,MAAQ,GAKJ,EAAKY,SAAWA,EAChB,EAAKZ,MAAQF,EACb,EAAKe,SAJoB,E,0CAO7B,WACI,GAAKd,KAAKa,SAGN,OACI,wBAAOJ,UAAU,uBAAjB,UACI,gCACA,+BACI,0DACA,0DACA,yDAGJ,gCAEA,cAAC,EAAD,CAAQR,MAAOD,KAAKC,iB,GA5BrBS,IAAMC,WClBnBI,EAAS,0BA2EfC,SAAS,WAELA,UAAWC,WAAWC,gBAAgB,CAClCC,OAAQ,uBACRC,UAAW,SAAUd,GAEjBe,IAAMC,IAAIP,EAAS,mBAAqBT,EAAOiB,MAC1CC,MAAK,SAAAC,GAMFC,eAAeC,QAAQ,SAAUF,EAASG,KAAKtB,OAAOuB,QACtDH,eAAeC,QAAQ,SAAUF,EAASG,KAAKtB,OAAOwB,WAAW,OAEpEC,OAAM,SAAAC,GACHC,MAAMC,KAAKC,UAAUH,QAKjCI,OAAQ,SAAUC,GACdJ,MAAMC,KAAKC,UAAUE,UAKlBC,MArGf,WAyDI,OACI,sBAAK7B,UAAU,MAAf,UAEI,wBAAQ8B,QA3DkB,WAE9B,IAGMX,EAAO,CACT,YAAe,CAAC,CACZ,UAAa,CAAC,CAAC,KAAQ,2BAAQ,MAAS,qDAAc,CAClD,KAAQ,eACR,MAAS,MACT,KAAQ,6BAEhB,iBAVWF,eAAec,QAAQ,UAWlC,UAAa,CAAC,CAAC,KAAQ,2BAAQ,MAAS,wCAAW,CAAC,KAAQ,2BAAQ,MAAS,8BAC7E,OAXWd,eAAec,QAAQ,WActCnB,IAAM,CACFoB,IAAK1B,EAAS,oBACd2B,OAAQ,OACRd,KAAMA,EACNe,QAAS,CACL,eAAgB,sBAGnBnB,MAAK,SAAUC,GACZQ,MAAMC,KAAKC,UAAUV,EAASG,OAE9BP,IAAMC,IAAIP,EAAS,qBAAuBU,EAASG,KAAKtB,QACnDkB,MAAK,SAAAC,GACFQ,MAAMC,KAAKC,UAAUV,EAASG,UAGjCG,OAAM,SAAAC,GACHC,MAAMC,KAAKC,UAAUH,UAKhCD,OAAM,SAAUC,GACbY,QAAQC,IAAIb,OAmBhB,wDAGA,wBAAQO,QAlBQ,WAEpBlB,IAAMC,IAAIP,EAAS,qBACdS,MAAK,SAAAC,GACFQ,MAAMC,KAAKC,UAAUV,EAASG,KAAKtB,SACnCM,EAAKkC,YAAYrB,EAASG,KAAKtB,QAAQ,MAE1CyB,OAAM,SAAAC,GACHC,MAAMC,KAAKC,UAAUH,QAUzB,oEAEA,qBAAMvB,UAAU,YAAhB,SACI,cAAC,EAAD,UChEDsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASzC,OACP,cAAC,IAAM0C,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.d9ae5408.chunk.js","sourcesContent":["import React from \"react\";\n\nclass TrData extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            this.props.items.map((item) => {\n                const name = item.formComponentValues[0].name;\n                const result = item.result;\n                const approveUserid = item.approverUserids[0];\n                return (\n                    <tr className=\"text-center\">\n                        <td>{name}</td>\n                        <td>{result}</td>\n                        <td>{approveUserid}</td>\n                    </tr>\n                )\n            })\n        )\n    }\n}\n\nclass List extends React.Component {\n\n\n    items = [];\n    isLoaded;\n\n    constructor(props, isLoaded) {\n        super(props);\n        this.isLoaded = isLoaded;\n        this.items = props;\n        this.render();\n    }\n\n    render() {\n        if (!this.isLoaded) {\n\n        } else\n            return (\n                <table className=\"table table-bordered\">\n                    <thead>\n                    <tr>\n                        <th>物品用途</th>\n                        <th>审批状态</th>\n                        <th>审批人</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n\n                    <TrData items={this.items}/>\n                    </tbody>\n                </table>\n            )\n    }\n}\n\nexport default List;\n","import './App.css';\nimport axios from 'axios';\nimport * as dd from 'dingtalk-jsapi';\nimport List from './List'\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n// 替换成后端服务域名\nconst domain = \"http://wanzq.vaiwan.com\";\n\nfunction App() {\n    const goodsCollectionAndApprove = () => {\n        // 获取存储的用户部门和ID\n        const userId = sessionStorage.getItem('userId');\n        const deptId = sessionStorage.getItem('deptId');\n        // demo直接构建了要请求的数据，实际开发需要从页面获取\n        const data = {\n            \"detailForms\": [{\n                \"textForms\": [{\"name\": \"物品名称\", \"value\": \"测试物品领用-电脑\"}, {\n                    \"name\": \"数量\",\n                    \"value\": \"3\"\n                }], \"name\": \"物品明细\"\n            }],\n            \"originatorUserId\": userId,\n            \"textForms\": [{\"name\": \"物品用途\", \"value\": \"测试物品领用\"}, {\"name\": \"领用详情\", \"value\": \"领用详情1\"}],\n            \"deptId\": deptId\n        };\n        // 创建审批流程\n        axios({\n            url: domain + '/process/instance',\n            method: 'post',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                alert(JSON.stringify(response.data));\n                // 根据instanceId获取实例详情\n                axios.get(domain + '/process/instance/' + response.data.result)\n                    .then(response => {\n                        alert(JSON.stringify(response.data))\n                        // console.log(response)\n                    })\n                    .catch(error => {\n                        alert(JSON.stringify(error))\n                        // console.log(error.message)\n                    })\n                // console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    const getTableRowData = () => {\n        // 根据instanceId获取实例详情\n        axios.get(domain + '/process/instance')\n            .then(response => {\n                alert(JSON.stringify(response.data.result))\n                List.constructor(response.data.result, true);\n            })\n            .catch(error => {\n                alert(JSON.stringify(error))\n                // console.log(error.message)\n            })\n    };\n    return (\n        <div className=\"App\">\n            {/*<header className=\"App-header\">*/}\n            <button onClick={goodsCollectionAndApprove}>领用并提交审批</button>\n            {/*</header>*/}\n            {/*<header className=\"App-header\">*/}\n            <button onClick={getTableRowData}>获取提交的审批信息</button>\n            {/*</header>*/}\n            <div  className=\"container\">\n                <List />\n            </div>\n        </div>\n    );\n};\n\n\ndd.ready(function () {\n    // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n    dd.runtime.permission.requestAuthCode({\n        corpId: \"ding9f50b15bccd16741\", //三方企业ID\n        onSuccess: function (result) {\n            // alert(JSON.stringify(result));\n            axios.get(domain + \"/login?authCode=\" + result.code)\n                .then(response => {\n                    // alert(JSON.stringify(response));\n                    // alert(JSON.stringify(response.data));\n                    // alert(JSON.stringify(response.data.result.userid));\n                    // alert(JSON.stringify(response.data.result.deptIdList[0]));\n                    // 登录成功后储存用户部门和ID\n                    sessionStorage.setItem(\"userId\", response.data.result.userid);\n                    sessionStorage.setItem(\"deptId\", response.data.result.deptIdList[0]);\n                })\n                .catch(error => {\n                    alert(JSON.stringify(error))\n                    // console.log(error.message)\n                })\n\n        },\n        onFail: function (err) {\n            alert(JSON.stringify(err))\n        }\n    });\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}