{"version":3,"sources":["List.js","App.js","reportWebVitals.js","index.js"],"names":["buttonStyle","height","margin","padding","fontsize","TrData","props","this","items","map","item","name","formComponentValues","result","approveUserid","approverUserids","className","React","Component","List","goodsCollectionAndApprove","data","sessionStorage","getItem","axios","url","domain","method","headers","then","response","alert","catch","error","console","log","getTableRowData","get","setState","isLoaded","JSON","stringify","state","style","onClick","dd","permission","requestAuthCode","corpId","onSuccess","code","setItem","userid","deptIdList","onFail","err","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAIMA,EAAc,CAACC,OAAO,OAAOC,OAAQ,OAAQC,QAAS,OAAQC,SAAS,QAEvEC,E,kDACF,WAAYC,GAAQ,uCACVA,G,0CAIV,WACI,OACIC,KAAKD,MAAME,MAAMC,KAAI,SAACC,GAClB,IAAMC,EAAOD,EAAKE,oBAAoB,GAAGD,KACnCE,EAASH,EAAKG,OACdC,EAAgBJ,EAAKK,gBAAgB,GAC3C,OACI,qBAAIC,UAAU,cAAd,UACI,6BAAKL,IACL,6BAAKE,IACL,6BAAKC,c,GAhBRG,IAAMC,WA0HZC,E,kDAhGX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IAOVc,0BAA4B,WAExB,IAGMC,EAAO,CACT,YAAe,CAAC,CACZ,UAAa,CAAC,CAAC,KAAQ,2BAAQ,MAAS,qDAAc,CAClD,KAAQ,eACR,MAAS,MACT,KAAQ,6BAEhB,iBAVWC,eAAeC,QAAQ,UAWlC,UAAa,CAAC,CAAC,KAAQ,2BAAQ,MAAS,wCAAW,CAAC,KAAQ,2BAAQ,MAAS,8BAC7E,OAXWD,eAAeC,QAAQ,WActCC,IAAM,CACFC,IAAKC,EAAS,oBACdC,OAAQ,OACRN,KAAMA,EACNO,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAUC,GACZC,MAAM,cAaTC,OAAM,SAAUC,GACbC,QAAQC,IAAIF,OAhDL,EAoDnBG,gBAAkB,WAEdZ,IAAMa,IAAIX,EAAS,qBACdG,MAAK,SAAAC,GAEF,EAAKQ,SACD,CAAC9B,MAAOsB,EAAST,KAAKR,OAAQ0B,UAAU,OAG/CP,OAAM,SAAAC,GACHF,MAAMS,KAAKC,UAAUR,QA5D7B,EAAKS,MAAQ,CACTlC,MAAO,GACP+B,UAAU,GAJC,E,0CAmEnB,WACI,OAAKhC,KAAKmC,MAAMH,SAMJ,gCACJ,wBAAQI,MAAO3C,EAAa4C,QAASrC,KAAKa,0BAA1C,wDACA,wBAAQuB,MAAO3C,EAAa4C,QAASrC,KAAK6B,gBAA1C,oEACA,wBAAOpB,UAAU,uBAAjB,UACI,gCACA,+BACI,0DACA,0DACA,yDAGJ,gCAEA,cAAC,EAAD,CAAQR,MAAOD,KAAKmC,MAAMlC,gBAlB1B,gCACJ,wBAAQmC,MAAO3C,EAAa4C,QAASrC,KAAKa,0BAA1C,wDACA,wBAAQuB,MAAO3C,EAAa4C,QAASrC,KAAK6B,gBAA1C,2E,GAzEGnB,IAAMC,WCtBZQ,EAAS,0BAoBtBmB,SAAS,WAELA,UAAWC,WAAWC,gBAAgB,CAClCC,OAAQ,uBACRC,UAAW,SAAUpC,GAEjBW,IAAMa,IAAIX,EAAS,mBAAqBb,EAAOqC,MAC1CrB,MAAK,SAAAC,GAMFR,eAAe6B,QAAQ,SAAUrB,EAAST,KAAKR,OAAOuC,QACtD9B,eAAe6B,QAAQ,SAAUrB,EAAST,KAAKR,OAAOwC,WAAW,OAEpErB,OAAM,SAAAC,GACHF,MAAMS,KAAKC,UAAUR,QAKjCqB,OAAQ,SAAUC,GACdxB,MAAMS,KAAKC,UAAUc,UAKlBC,MA9Cf,WAEI,OACI,qBAAKxC,UAAU,MAAf,SAOI,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,SCTDyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.ee6e6566.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {domain} from \"./App\";\n\nconst buttonStyle = {height:'60px',margin: '10px', padding: '10px', fontsize:'30px'};\n\nclass TrData extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            this.props.items.map((item) => {\n                const name = item.formComponentValues[0].name;\n                const result = item.result;\n                const approveUserid = item.approverUserids[0];\n                return (\n                    <tr className=\"text-center\">\n                        <td>{name}</td>\n                        <td>{result}</td>\n                        <td>{approveUserid}</td>\n                    </tr>\n                )\n            })\n        )\n    }\n}\n\nclass List extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            isLoaded: false\n        };\n    };\n\n    goodsCollectionAndApprove = () => {\n        // 获取存储的用户部门和ID\n        const userId = sessionStorage.getItem('userId');\n        const deptId = sessionStorage.getItem('deptId');\n        // demo直接构建了要请求的数据，实际开发需要从页面获取\n        const data = {\n            \"detailForms\": [{\n                \"textForms\": [{\"name\": \"物品名称\", \"value\": \"测试物品领用-电脑\"}, {\n                    \"name\": \"数量\",\n                    \"value\": \"3\"\n                }], \"name\": \"物品明细\"\n            }],\n            \"originatorUserId\": userId,\n            \"textForms\": [{\"name\": \"物品用途\", \"value\": \"测试物品领用\"}, {\"name\": \"领用详情\", \"value\": \"领用详情1\"}],\n            \"deptId\": deptId\n        };\n        // 创建审批流程\n        axios({\n            url: domain + '/process/instance',\n            method: 'post',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                alert(\"success\");\n                // 根据instanceId获取实例详情\n                // axios.get(domain + '/process/instance/' + response.data.result)\n                //     .then(response => {\n                //         alert(JSON.stringify(response.data))\n                //         // console.log(response)\n                //     })\n                //     .catch(error => {\n                //         alert(JSON.stringify(error))\n                //         // console.log(error.message)\n                //     })\n                // console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    getTableRowData = () => {\n        // 根据instanceId获取实例详情\n        axios.get(domain + '/process/instance')\n            .then(response => {\n                // alert(JSON.stringify(response.data.result))\n                this.setState(\n                    {items: response.data.result, isLoaded: true}\n                )\n            })\n            .catch(error => {\n                alert(JSON.stringify(error))\n                // console.log(error.message)\n            })\n    };\n\n    render() {\n        if (!this.state.isLoaded) {\n            return (<div>\n                <button style={buttonStyle} onClick={this.goodsCollectionAndApprove}>领用并提交审批</button>\n                <button style={buttonStyle} onClick={this.getTableRowData}>获取提交的审批信息</button>\n            </div>)\n        } else {\n            return (<div>\n                <button style={buttonStyle} onClick={this.goodsCollectionAndApprove}>领用并提交审批</button>\n                <button style={buttonStyle} onClick={this.getTableRowData}>获取提交的审批信息</button>\n                <table className=\"table table-bordered\">\n                    <thead>\n                    <tr>\n                        <th>物品用途</th>\n                        <th>审批状态</th>\n                        <th>审批人</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n\n                    <TrData items={this.state.items}/>\n\n                    </tbody>\n                </table>\n            </div>)\n        }\n    }\n}\n\nexport default List;\n","import './App.css';\nimport axios from 'axios';\nimport * as dd from 'dingtalk-jsapi';\nimport List from './List'\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n// 替换成后端服务域名\nexport const domain = \"http://wanzq.vaiwan.com\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={goodsCollectionAndApprove}>领用并提交审批</button>*/}\n            {/*</header>*/}\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={}>获取提交的审批信息</button>*/}\n            {/*</header>*/}\n            <div className=\"container\">\n                <List />\n            </div>\n        </div>\n    );\n};\n\n\ndd.ready(function () {\n    // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n    dd.runtime.permission.requestAuthCode({\n        corpId: \"ding9f50b15bccd16741\", //三方企业ID\n        onSuccess: function (result) {\n            // alert(JSON.stringify(result));\n            axios.get(domain + \"/login?authCode=\" + result.code)\n                .then(response => {\n                    // alert(JSON.stringify(response));\n                    // alert(JSON.stringify(response.data));\n                    // alert(JSON.stringify(response.data.result.userid));\n                    // alert(JSON.stringify(response.data.result.deptIdList[0]));\n                    // 登录成功后储存用户部门和ID\n                    sessionStorage.setItem(\"userId\", response.data.result.userid);\n                    sessionStorage.setItem(\"deptId\", response.data.result.deptIdList[0]);\n                })\n                .catch(error => {\n                    alert(JSON.stringify(error))\n                    // console.log(error.message)\n                })\n\n        },\n        onFail: function (err) {\n            alert(JSON.stringify(err))\n        }\n    });\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}